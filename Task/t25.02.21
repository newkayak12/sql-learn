--1. 윤은해와 급여가 같은 사원들을 검색해서, 사원번호,사원이름, 급여를 출력하라.

SELECT EMP_ID, EMP_NAME, SALARY
FROM EMPLOYEE
WHERE  SALARY = (SELECT SALARY FROM EMPLOYEE WHERE EMP_NAME = '윤은해')  AND EMP_NAME != '윤은해';





--2. EMPLOYEE 테이블에서 기본급여가 제일 많은 사람과 제일 적은 사람의 정보를 
-- 사번, 사원명, 기본급여를 나타내세요.

SELECT EMP_ID, EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY  = (SELECT MAX(SALARY) FROM EMPLOYEE  ) 
                            OR
            SALARY = (SELECT MIN (SALARY) FROM EMPLOYEE);                    




--3. D1, D2부서에 근무하는 사원들 중에서
--기본급여가 D5 부서 직원들의 '평균월급' 보다 많은 사람들만 
--부서번호, 사원번호, 사원명, 월급을 나타내세요.





SELECT DEPT_CODE, EMP_ID,  EMP_NAME, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE IN ('D1','D2')
                        AND
            SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE WHERE DEPT_CODE = 'D5');            






-- 차태연, 전지연 사원의 급여등급(EMPLYEE테이블의 SAL_LEVEL컬럼)과 같은 사원의 직급명, 사원명을 출력.

SELECT  JOB_NAME, EMP_NAME
FROM EMPLOYEE E  JOIN JOB J ON (E.JOB_CODE = J.JOB_CODE) 
WHERE SAL_LEVEL IN (
                                SELECT SAL_LEVEL
                                FROM EMPLOYEE
                                WHERE DEPT_CODE IN ('D1','D2')
                                            AND
                                SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE WHERE DEPT_CODE = 'D5')
                                
                            );           

--1.직급이 대표, 부사장이 아닌 모든 사원을 부서별로 출력. 

SELECT dept_title, e.*
FROM EMPLOYEE e  JOIN JOB j on (e.job_code = j.JOB_CODE)
                            JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE  JOB_NAME NOT IN ('대표', '부사장')
order by 1;



--2.ASIA1지역에 근무하는 사원 정보출력, 부서코드, 사원명.(메인쿼리 조인금지)

SELECT DEPT_CODE, EMP_NAME
FROM EMPLOYEE 
WHERE DEPT_CODE IN (SELECT DEPT_ID FROM  DEPARTMENT  
                                                            JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE) WHERE LOCAL_NAME = 'ASIA1');
            

SELECT *
FROM DEPARTMENT;

SELECT *
FROM LOCATION;

    

--1. 2000년1월1일 이전 입사자중에 2000년 1월1일 이후 입사자보다 급여를 (가장 높게 받는 사원보다) 
--적게 받는 사원의 사원명과 월급여를 출력하세요.

SELECT EMP_NAME, SALARY 
FROM EMPLOYEE
WHERE HIRE_DATE < ('2000/01/01')
                    AND
        SALARY > (SELECT MAX(SALARY) FROM EMPLOYEE WHERE HIRE_DATE > ('2000/01/01'));



--2. 어떤 'J4'직급의 사원보다 많은 급여를 받는 직급이 J5, J6, J7인 사원 출력.
SELECT *
FROM(
            SELECT *  
            FROM EMPLOYEE 
            WHERE JOB_CODE IN ('J5','J6','J7'))
WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEE WHERE JOB_CODE = 'J4');



--3. D1 부서의 사원(전체)보다 입사가 늦은 사원들의 정보를 검색하고, 이름, 부서번호, 입사일을 출력하라.



SELECT EMP_NAME, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE HIRE_DATE > ALL (SELECT HIRE_DATE FROM EMPLOYEE WHERE DEPT_CODE = 'D1');



-- 4.  '인사관리부'의 사원전체보다 입사가 늦은 사원들의 정보를 검색하고, 이름, 부서명, 입사일로 출력.

SELECT EMP_NAME, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE HIRE_DATE > ALL( SELECT HIRE_DATE FROM EMPLOYEE JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID) WHERE DEPT_TITLE = '인사관리부');







----기술지원부이면서 급여가 2000000인 사원이 있다고 한다.
--해당사원의 이름, 부서코드, 급여를 출력하기
--형식을 부여함.

SELECT EMP_NAME, JOB_CODE, TO_CHAR(SALARY, '999,999,999,999')
FROM EMPLOYEE JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE = '기술지원부' AND SALARY > 2000000; 



--3. 직급이 J1, J2, J3이 아닌 사원중에서 자신의 부서별 평균급여보다 많은 급여를 받는 사원출력.
-- 부서코드, 사원명, 급여, 부서별 급여평균
select dept_code, avg(salary)
from employee
group by dept_code;

select dept_code, emp_name,salary,(select avg(salary) from employee l where e.dept_code = l.dept_code)
from employee e
where dept_code not in ('J1','J2','J3')and salary >  (select avg(salary) from employee l where e.dept_code = l.dept_code)
order by 1;

select dept_code, avg(salary)
from employee
group by dept_code
order by 1;








-- 
select dept_code, emp_name, salary, e.avg(salary)
from employee l join (select dept_code, avg(salary)
                                from employee
                                group by dept_code) e
                        on    (e.dept_code = l.dept_code)  ;
                        
              
----
select e.dept_code, e.emp_name, e.salary
from (
            select dept_code, emp_name, salary
            from employee 
            where dept_code not in ('J1', 'J2', 'J3')
            order by 1
         
        )e
where   e. salary   > (  select avg(salary) 
                                  from employee 
                                  group by dept_code);
            



-- 차태연, 전지연 사원의 급여등급(EMPLYEE테이블의 SAL_LEVEL컬럼)과 같은 사원의 직급명, 사원명을 출력.
select sal_level, emp_name, job_name
from employee join job using (job_code)
where sal_level in (select sal_level from employee where emp_name in ('차태연', '전지연'));


-- select문 종합
--1. 
select emp_name, dept_code, salary
from employee join department on (dept_code = dept_id)
where dept_title = '기술지원부';

--2.
select emp_name, dept_code, salary
from employee e join department l on (e.dept_code = l.dept_id)
where dept_title = '기술지원부' 
                AND
            salary = (select max(salary) from employee  j where e.dept_code =j.dept_code );
            
            
--3 

--3.1
select l.emp_id as "사원의 사번", l.emp_name  as "사원" , e.emp_name  as "매니저", l.salary as "사원의 월급"
from employee e join employee l on (e.emp_id = l.manager_id);

--3.2
select e1.emp_id, e1.emp_name, (select m.emp_name from employee m where m.emp_id = e1.manager_id) as "매니저 이름", e1.salary
from employee e1;


select *
from employee;
            

